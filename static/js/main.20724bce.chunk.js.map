{"version":3,"sources":["components/PlayerStats.js","components/SearchPlayer.js","components/Header.js","components/FortniteNewsBR.js","components/FortniteStore.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["PlayerStats","react_default","a","createElement","className","href","onClick","this","props","close","isLoading","src","alt","nickName","wins","kills","matchesplayed","kd","concat","winrate","React","Component","SearchPlayer","state","showStats","uid","Stats","username","handleValueChange","event","_this","setState","target","value","handleSubmit","preventDefault","fetchPlayerID","closeStats","url","encodeURIComponent","fetch","headers","Authorization","then","response","json","data","fetchPlayerStats","catch","err","console","log","totals","Fragment","onSubmit","type","onChange","placeholder","required","components_PlayerStats","Header","components_SearchPlayer","FortniteNewsBR","fetchNews","news","logNews","text","map","item","index","key","image","title","body","FortniteStore","fetchStore","createStore","featured","filter","store","isFeatured","daily","images","information","MainContent","components_FortniteNewsBR","components_FortniteStore","App","playerName","components_Header","Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20724bce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass PlayerStats extends React.Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"player-stats\">\r\n      <a href=\"#\" className=\"close-button\" onClick={this.props.close}>âœ–</a>\r\n        {\r\n          this.props.isLoading ?\r\n          <img src=\"http://www.mytreedb.com/uploads/mytreedb/loader/ajax_loader_blue_350.gif\" className=\"img-fluid\" alt=\"Loading\" />\r\n          :\r\n          <div className=\"container\">\r\n          <div className=\"row text-center\">\r\n            <div className=\"col-sm\">\r\n              Name: {this.props.nickName}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm bg-stats\">\r\n              <div className=\"main-stats\">\r\n                <span className=\"big\">{this.props.wins}</span> Wins\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm bg-stats\">\r\n              <div className=\"main-stats\">\r\n                <span className=\"big\">{this.props.kills}</span> Kills\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm bg-stats\">\r\n              <div className=\"main-stats main-stats-last\">\r\n                <span className=\"big\">{this.props.matchesplayed}</span> Matches Played\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row stats-small\">\r\n            <div className=\"col-sm text-left\">\r\n              K/D:\r\n            </div>\r\n            <div className=\"col-sm text-right\">\r\n              {this.props.kd}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row stats-small\">\r\n            <div className=\"col-sm text-left\">\r\n              Win ratio:\r\n            </div>\r\n            <div className=\"col-sm text-right\">\r\n            {`${this.props.winrate}%`}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        }\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerStats;","import React from 'react';\r\nimport PlayerStats from './PlayerStats';\r\n\r\n\r\nclass SearchPlayer extends React.Component {\r\n  state = {\r\n    showStats: false,\r\n    isLoading: true,\r\n    nickName: '',\r\n    uid: '',\r\n    Stats: {\r\n      username: '',\r\n      matchesplayed: 0,\r\n      kills: 0,\r\n      kd: 0,\r\n      wins: 0,\r\n      winrate: 0\r\n    }\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n\r\n  handleValueChange = (event) => {\r\n    this.setState({ nickName: event.target.value });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      showStats: true,\r\n      isLoading: true\r\n    });\r\n    this.fetchPlayerID();\r\n  }\r\n\r\n  closeStats = () => {\r\n    this.setState({showStats: false});\r\n  }\r\n\r\n\r\n\r\n  fetchPlayerID = () => {\r\n    const settings = {\r\n      \"headers\": {\r\n        \"Authorization\": \"34d68b148e30d7f7a4e608d9baba7b92\"\r\n      },\r\n    };\r\n    const url = `https://fortnite-api.theapinetwork.com/users/id?username=${encodeURIComponent(this.state.nickName)}`;\r\n    fetch(url, settings)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ uid: data.data.uid });\r\n        this.fetchPlayerStats();\r\n\r\n      })\r\n      .catch(err => console.log(err))\r\n      \r\n  }\r\n\r\n  fetchPlayerStats = () => {\r\n    const settings = {\r\n      \"headers\": {\r\n        \"Authorization\": \"34d68b148e30d7f7a4e608d9baba7b92\"\r\n      },\r\n    };\r\n    const url = `https://fortnite-api.theapinetwork.com/prod09/users/public/br_stats?user_id=${this.state.uid}&platform=pc`;\r\n    fetch(url, settings)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          Stats: {\r\n            username: data.username,\r\n            matchesplayed: data.totals.matchesplayed,\r\n            kills: data.totals.kills,\r\n            kd: data.totals.kd,\r\n            wins: data.totals.wins,\r\n            winrate: data.totals.winrate\r\n\r\n          }\r\n        });\r\n      })\r\n      .then(this.setState({isLoading: false}))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input className=\"form-control mr-sm-2\" type=\"text\" value={this.state.nickName} onChange={this.handleValueChange} placeholder=\"Player Nickname here..\" required></input>\r\n          <button className=\"btn btn-outline-success my-2\" type=\"submit\">Search</button>\r\n        </form>\r\n        {\r\n          this.state.showStats ?\r\n            <PlayerStats\r\n              nickName={this.state.Stats.username}\r\n              uid={this.state.uid}\r\n              close={this.closeStats}\r\n              isLoading={this.state.isLoading}\r\n              matchesplayed={this.state.Stats.matchesplayed}\r\n              kills={this.state.Stats.kills}\r\n              kd={this.state.Stats.kd}\r\n              wins={this.state.Stats.wins}\r\n              winrate={this.state.Stats.winrate}\r\n            />\r\n            :\r\n            null\r\n\r\n        }\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default SearchPlayer;","import React from 'react';\r\nimport SearchPlayer from './SearchPlayer';\r\n\r\n// Full version with { return () }\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"jumbotron jumbotron-fluid text-center\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4\">Your Fortnite Stats</h1>\r\n  \r\n          <SearchPlayer />\r\n  \r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass FortniteNewsBR extends React.Component {\r\n\r\n  state = {\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.fetchNews();\r\n    if (this.state.news) {\r\n    }\r\n  }\r\n\r\n  fetchNews = () => {\r\n    const settings = {\r\n      \"headers\": {\r\n        \"Authorization\": \"34d68b148e30d7f7a4e608d9baba7b92\"\r\n      },\r\n    };\r\n    const url = `https://fortnite-api.theapinetwork.com/br_motd/get\r\n        `;\r\n    fetch(url, settings)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        news: data.data\r\n      }))\r\n  }\r\n\r\n  logNews = () => {\r\n    console.log(this.state.news);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <h1>{this.state.text}</h1>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            {\r\n              this.state.news ?\r\n                this.state.news.map((item, index) => {\r\n                  return <div className=\"col-12 fortniteNews\" key={index}>\r\n                    <div className=\"card p-2\">\r\n                      <img className=\"card-img-top\" src={item.image} alt={item.title}></img>\r\n                      <div className=\"card-body\">\r\n                        <h3>{item.title}</h3>\r\n                        <p className=\"card-text\">{item.body}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                })\r\n                :\r\n                <h3>Wait</h3>\r\n            }\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default FortniteNewsBR;","import React from 'react';\r\n\r\nclass FortniteStore extends React.Component {\r\n\r\n  state = {\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.fetchStore();\r\n  }\r\n\r\n  fetchStore = () => {\r\n    const settings = {\r\n      \"headers\": {\r\n        \"Authorization\": \"34d68b148e30d7f7a4e608d9baba7b92\"\r\n      },\r\n    };\r\n    const url = `https://fortnite-api.theapinetwork.com/store/get`;\r\n    fetch(url, settings)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        news: data.data\r\n      }))\r\n      .then(this.createStore)\r\n\r\n\r\n  }\r\n\r\n  createStore = () => {\r\n    const featured = this.state.news.filter((item) => item.store.isFeatured)\r\n    const daily = this.state.news.filter((item) => !item.store.isFeatured)\r\n    this.setState({\r\n      featured: featured,\r\n      daily: daily\r\n    })\r\n\r\n\r\n  }\r\n\r\n  logNews = () => {\r\n    console.log(this.state.news);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n\r\n              <h3 className=\"col-12\">Featured</h3>\r\n\r\n            {\r\n              this.state.featured ?\r\n                this.state.featured.map((item, index) => {\r\n                  return <div className=\"col-md-6 fortniteStore\" key={index}>\r\n                    <div className=\"card\">\r\n                      <img className=\"card-img-top\" src={item.item.images.information} alt={item.title}></img>\r\n                    </div>\r\n                  </div>\r\n                })\r\n                :\r\n                <h3>Wait</h3>\r\n            }\r\n            <div className=\"col-12\">\r\n              <h3>Daily</h3>\r\n            </div>\r\n            {\r\n              this.state.daily ?\r\n              this.state.daily.map((item, index) => {\r\n                  return <div className=\"col-md-6 fortniteStore\" key={index}>\r\n                    <div className=\"card\">\r\n                      <img className=\"card-img-top\" src={item.item.images.information} alt={item.title}></img>\r\n                    </div>\r\n                  </div>\r\n                })\r\n                :\r\n                <h3>Wait</h3>\r\n            }\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default FortniteStore;","import React from 'react';\r\nimport FortniteNewsBR from './FortniteNewsBR'\r\nimport FortniteStoreFeatured from './FortniteStore'\r\n\r\nconst MainContent = () => (\r\n\r\n    <div className=\"main-content\">\r\n\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-between\">\r\n                <div className=\"col-sm-8\">\r\n                    <FortniteNewsBR />\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <FortniteStoreFeatured />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default MainContent;","import React from 'react';\nimport './css/main.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nclass App extends React.Component {\n  state = {\n    playerName: ''\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Main />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}